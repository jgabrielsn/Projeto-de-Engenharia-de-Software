{"_type":"export","__export_format":4,"__export_date":"2023-04-26T01:04:07.850Z","__export_source":"insomnia.desktop.app:v2023.1.0","resources":[{"_id":"req_a2590360c5124af7bbf3e8a2cce87d29","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470890011,"created":1682463510760,"url":"https://budget-hwck.onrender.com/users/meta/66","name":"Inserir meta do user","description":"A rota \"POST /users/meta/:id\" é responsável por atualizar a meta de um usuário específico na base de dados da aplicação. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nA rota espera receber como parâmetro na URL o ID do usuário cuja meta será atualizada. O parâmetro é acessado por meio do objeto \"req.params\", que é uma propriedade do objeto de requisição do Express.js.\n\nAlém disso, a rota espera receber no corpo da requisição um objeto JSON contendo a meta que será atualizada. O objeto JSON é acessado por meio do objeto \"req.body\", que é uma propriedade do objeto de requisição do Express.js.\n\nAntes de atualizar a meta do usuário na base de dados, a rota passa pelo middleware \"verifyID\", definido em \"userMiddleware\", que verifica se o ID informado é válido.\n\nApós a autenticação ser realizada com sucesso, o ID ser validado e a rota receber tanto o ID na URL quanto o objeto JSON no corpo da requisição, a rota chama o método \"updateMeta\" definido no \"usersController\", que é responsável por atualizar a meta do usuário com o ID especificado na base de dados.\n\nSe a atualização da meta for bem-sucedida, a rota retorna um objeto JSON contendo as informações do usuário com a meta atualizada no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a atualização da meta falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"Meta\": 600\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682463510760,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"wrk_dff0238986014f3f841c07c45061d803","parentId":null,"modified":1682459992338,"created":1682459992338,"name":"budget - users","description":"","scope":"collection","_type":"workspace"},{"_id":"req_4cfaaf8f88904e51ab11aa685140eac8","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470868940,"created":1682463023007,"url":"https://budget-hwck.onrender.com/users/formulario/66","name":"inserir formulário do user ","description":"A rota \"POST /users/formulario/:id\" é responsável por inserir as informações respondidas no formulário de um usuário específico(Objetivo, Salário, Saldo) na base de dados da aplicação. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nA rota espera receber como parâmetro na URL o ID do usuário cujo formulário será atualizado. O parâmetro é acessado por meio do objeto \"req.params\", que é uma propriedade do objeto de requisição do Express.js.\n\nAlém disso, a rota espera receber no corpo da requisição um objeto JSON contendo os dados do formulário que serão atualizados. O objeto JSON é acessado por meio do objeto \"req.body\", que é uma propriedade do objeto de requisição do Express.js.\n\nAntes de atualizar o formulário do usuário na base de dados, a rota passa pelo middleware \"verifyID\", definido em \"userMiddleware\", que verifica se o ID informado é válido.\n\nApós a autenticação ser realizada com sucesso, o ID ser validado e a rota receber tanto o ID na URL quanto o objeto JSON no corpo da requisição, a rota chama o método \"updateFormulario\" definido no \"usersController\", que é responsável por atualizar o formulário do usuário com o ID especificado na base de dados.\n\nSe a atualização do formulário for bem-sucedida, a rota retorna um objeto JSON contendo as informações do usuário com o formulário atualizado no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a atualização do formulário falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"Objetivo\": \"organização\",\n\t\"Salario\": 10000,\n\t\"Saldo\": 6000\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682463023007,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_759b45957655461abab016075e3abcac","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470848006,"created":1682462754818,"url":"https://budget-hwck.onrender.com/users/saldo/28","name":"Inserir o saldo de um user ","description":"A rota \"POST /users/saldo/:id\" é responsável por inserirr o saldo de um usuário específico na base de dados da aplicação. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nA rota espera receber como parâmetro na URL o ID do usuário cujo saldo será atualizado. O parâmetro é acessado por meio do objeto \"req.params\", que é uma propriedade do objeto de requisição do Express.js.\n\nAntes de atualizar o saldo do usuário na base de dados, a rota passa pelo middleware \"verifyID\", definido em \"userMiddleware\", que verifica se o ID informado é válido.\n\nAlém disso, a rota espera receber no corpo da requisição um objeto JSON contendo o valor a ser adicionado ou subtraído do saldo do usuário. O objeto JSON é acessado por meio do objeto \"req.body\", que é uma propriedade do objeto de requisição do Express.js.\n\nApós a autenticação ser realizada com sucesso, o ID ser validado e a rota receber tanto o ID na URL quanto o objeto JSON no corpo da requisição, a rota chama o método \"updateSaldo\" definido no \"usersController\", que é responsável por atualizar o saldo do usuário com o ID especificado na base de dados.\n\nSe a atualização do saldo for bem-sucedida, a rota retorna um objeto JSON contendo as informações do usuário com o saldo atualizado no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a atualização do saldo falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"Saldo\": 40000\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682462754818,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_03c95d77401a4b15a6ace96683cd2498","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470804644,"created":1682462567391,"url":"https://budget-hwck.onrender.com/users/id/66","name":"Retornar user por ID","description":"A rota \"GET /users/id/:id\" é responsável por buscar um usuário específico na base de dados da aplicação a partir do seu ID. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nA rota espera receber como parâmetro na URL o ID do usuário a ser buscado. O parâmetro é acessado por meio do objeto \"req.params\", que é uma propriedade do objeto de requisição do Express.js.\n\nAntes de buscar o usuário na base de dados, a rota passa pelo middleware \"verifyID\", definido em \"userMiddleware\", que verifica se o ID informado é válido.\n\nApós a autenticação ser realizada com sucesso, o ID ser validado e a rota receber o parâmetro \"id\" na URL, a rota chama o método \"getUserByID\" definido no \"usersController\", que é responsável por buscar o usuário com o ID especificado na base de dados.\n\nSe a busca for bem-sucedida, a rota retorna um objeto JSON contendo as informações do usuário encontrado no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a busca falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682462567391,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_726667e6c2ed42bd868a14559022dea9","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470777343,"created":1682462352385,"url":"https://budget-hwck.onrender.com/users/email/testandorota@gmail.com","name":"Rertornar user por email ","description":"Essa rota \"GET /users/email/:email\" é responsável por buscar um usuário específico na base de dados da aplicação a partir do seu endereço de e-mail. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nA rota espera receber como parâmetro na URL o endereço de e-mail do usuário a ser buscado. O parâmetro é acessado por meio do objeto \"req.params\", que é uma propriedade do objeto de requisição do Express.js.\n\nAntes de buscar o usuário na base de dados, a rota passa pelo middleware \"validateEmail\", definido em \"userMiddleware\", que verifica se o endereço de e-mail informado é válido.\n\nApós a autenticação ser realizada com sucesso, o endereço de e-mail ser validado e a rota receber o parâmetro \"email\" na URL, a rota chama o método \"getUserByEmail\" definido no \"usersController\", que é responsável por buscar o usuário com o endereço de e-mail especificado na base de dados.\n\nSe a busca for bem-sucedida, a rota retorna um objeto JSON contendo as informações do usuário encontrado no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a busca falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"Email\": \"testandorota@gmail.com\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682462352385,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_dc229425e06e481b8f1ac6e6a759c37c","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470718839,"created":1682462202797,"url":"https://budget-hwck.onrender.com/users/id","name":"Atualizar user","description":"Essa rota \"PUT /users/:id\" é responsável por atualizar as informações de um usuário específico na base de dados da aplicação. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nA rota espera receber como parâmetro na URL o \"id\" do usuário a ser atualizado. O parâmetro é acessado por meio do objeto \"req.params\", que é uma propriedade do objeto de requisição do Express.js.\n\nAntes de atualizar as informações do usuário, a rota passa pelo middleware \"validateBody\", definido em \"userMiddleware\", que verifica se o corpo da requisição é válido. Esse middleware garante que apenas os campos que devem ser atualizados sejam enviados na requisição.\n\nApós a autenticação ser realizada com sucesso, o parâmetro \"id\" ser obtido e o middleware \"validateBody\" ser validado, a rota chama o método \"updateUser\" definido no \"usersController\", que é responsável por atualizar as informações do usuário com o \"id\" especificado na base de dados.\n\nSe a atualização for bem-sucedida, a rota retorna um objeto JSON contendo uma mensagem de sucesso no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a atualização falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"UserName\": \"Vinicius\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682462202797,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5f3cedfb0c3e431eb22ed37d0a72b287","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470666850,"created":1682461627730,"url":"https://budget-hwck.onrender.com/users/145","name":"Deletar user","description":"Essa rota \"DELETE /users/:id\" é responsável por excluir um usuário específico da base de dados da aplicação. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nA rota espera receber como parâmetro na URL o \"id\" do usuário a ser excluído. O parâmetro é acessado por meio do objeto \"req.params\", que é uma propriedade do objeto de requisição do Express.js.\n\nApós a autenticação ser realizada com sucesso e o parâmetro \"id\" ser obtido, a rota chama o método \"deleteUser\" definido no \"usersController\", que é responsável por excluir o usuário com o \"id\" especificado da base de dados.\n\nSe a exclusão for bem-sucedida, a rota retorna um objeto JSON contendo uma mensagem de sucesso no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a exclusão falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682461627730,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_f20f0f2dc39a48e1b946277d52c4ee7a","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470519633,"created":1682461473541,"url":"https://budget-hwck.onrender.com/users","name":"Retornar todos os users","description":"Essa rota \"GET /users\" é responsável por retornar a lista de todos os usuários cadastrados na aplicação. A rota é protegida por autenticação JWT, o que significa que apenas usuários autenticados podem acessá-la.\n\nPara realizar a autenticação JWT, a rota utiliza o middleware \"passport.authenticate\" do pacote \"passport\", que é um middleware de autenticação para Node.js. O método \"authenticate\" espera receber dois parâmetros: o primeiro é a estratégia de autenticação a ser utilizada (no caso, JWT) e o segundo é um objeto de configuração que desabilita o uso de sessões (session: false).\n\nApós a autenticação ser realizada com sucesso, a rota chama o método \"getAll\" definido no \"usersController\", que é responsável por buscar na base de dados todos os usuários cadastrados e retorná-los em um objeto JSON.\n\nSe a busca for bem-sucedida, a rota retorna um objeto JSON contendo a lista de usuários no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a busca falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (500 Internal Server Error).","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682461473541,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8dd2916d84044705955d00ff703e1273","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470607837,"created":1682460435784,"url":"https://budget-hwck.onrender.com/register","name":"Fazer cadastro do user","description":"Essa rota \"POST /register\" é responsável por cadastrar um novo usuário na aplicação. A rota espera receber no corpo da requisição um objeto JSON contendo o nome, email e senha do usuário.\n\nAntes de realizar o cadastro, a rota passa por quatro middlewares definidos em userMiddleware para validar se os campos do corpo da requisição estão presentes e se estão no formato correto. O primeiro middleware é \"validateBody\", que verifica se o corpo da requisição é válido. O segundo middleware é \"validateEmail\", que verifica se o email informado é válido. O terceiro middleware é \"validatePassword\", que verifica se a senha informada é válida. E o quarto middleware é \"validateName\", que verifica se o nome informado é válido.\n\nCaso todos os middlewares sejam validados com sucesso, a rota chama o método \"register\" definido no \"usersController\", que é responsável por criar um novo usuário na base de dados. Se o cadastro for bem-sucedido, a rota retorna um objeto JSON contendo o nome e email do usuário cadastrado no corpo da resposta e um status de sucesso (201 Created).\n\nCaso o cadastro falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (400 Bad Request).","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"Email\": \"testandorota2@gmail.com\",\n\t\"UserName\":\"testederota\",\n\t\"Password\":\"3244\"\n} "},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_8f98ae4660134242bd043a425fc9d480"},{"id":"pair_803c7c3a86ef4834add1ca6acc8aca37","name":"Authorization","value":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDYwMTY1OTU0LCJleHAiOjE2ODI0NjA3NzA3NTR9.XhBJ1V9VIcnLyWuJrzzamZE81jtRycGcl31ywaw4RIakht_CdOPejG9WUR1qC0c5knV0JSfPC0JDD-6RLjc_VLboRLVOJoUCRZdGzqvyZYAyO2ulXrY_9qJjxka5bueQAMxMarkK4oKoGb9lfGBUgPcniw1QgxX9CirCo1tnyt2rZ-lQKBES08roUNMVBHRCQ8XY8Fcr-7Zo5v_brPqdfIz6JdoIP6LwAGfd1z_IcTe2WBnGchVrbpRZWtIUX27eYxUeK9z6WeXDxlI_dVZxwUNBXe5icfR-CMUt_x5lfvkmPMHtsPqfjtF8csEmlo2baA7QUZ1Jq-LCbeiwhmvk1PTRbqDz72pGzgRVKZ8kwh171qF8saLeVonN8QRCDtHdNNWl8qRQZl5L54E9N5l7NRkIgz6RSuyLaRhrxjaXLT5fAEXF6kK6WpTOs_dAuOmUkZ38ztb9jSxVhiQM5uMQN7v4JE03tKVNUIrcB5-j_l0N614golw_IpJ8jON9SD7smlDVOZ--ASW1q3WX7ckEfeTmB6KxlpLrP4YFEtb6fJr_VMjmDjZGyZ9cmNx7LW22V0ooL4xBfEvfJchfqNLxNqlM9-6HwLO3Y8uMg9DplOK9x33p_FHzLt6vl3XX5vL1Dm3Tt5VTuORiARfD_bk_3NdS0f5xe3shVta0zCMoKQo","description":""}],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDY5MDQyOTU1LCJleHAiOjE2ODI0Njk2NDc3NTV9.NrxfH5KLXNNnVIvSsHF2YTCnO6UGVfuT41JsPbvSSmd_u0ZJPOuoscfRNPSkz6LsZE5Xr0FJds1POWb3IKntBN90mEy5tNFl7FcVBtQK1bwX1ePKVVkzDu2Y36wosZ6_NmNzdvALcA4uQSQuNoNCoHUWeE3vnzpWPaiqclFnez8CuNrhOCWzYaBH_xb9TXzBt2g6-0v2LfzD8pV97l6sI_zyG3H-3p3ieyIFOwKoOL4kgYMHhHHJNr-NTLAQXpn3WpjMlQpLu_k8lKFMbS5WyWgEeKAoH6Vm129TMl8ndJDBVCWjUB46GOrOYpsEuleyAQ944_Sc-jKIZN1XVakTP2DgwQC_7CHyQTbtp_eOKIUK4A8z5DdlDn4hmPk7dGTWOzsmvR0xpRrN86oW1tc7M2W8pxRU87fus8u6rsQrYA4-z_vyAvWYCfz2B9xHBOnbTGNqMPeY9H7OTBRZQTg3Q4fGc4pTUk3yGomhvrrQ7Y8XTORfLwfky5VBoPFBL4Lqf7C8Su2eL6UWX0Mp8ilt7YhT6ot1AjOcGzu2sF-r-RPOVJwkznXpkwjE89Pg2n9ugVNq_LktjShihckK5uAJuFCMCRDiZyglLcoA1jqmtHLFpEKqigfKUz3CS5jn3OwnZbPyfYwho6L9NFsNPJRLaUhJsTt-_fuaQerOKVDVVPA"},"metaSortKey":-1682460435784,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_1d78e0a9956a462d8e70f081a8215b24","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682469042559,"created":1682460007414,"url":"https://budget-hwck.onrender.com/login","name":"Fazer login do user","description":"Essa rota \"POST /login\" é responsável por autenticar o usuário e retornar um token JWT que será utilizado para autorizar as requisições subsequentes. A rota espera receber no corpo da requisição um objeto JSON contendo o email e a senha do usuário.\n\nAntes de realizar o login, a rota passa por três middlewares definidos em userMiddleware para validar se os campos do corpo da requisição estão presentes e se estão no formato correto. O primeiro middleware é \"validateBody\", que verifica se o corpo da requisição é válido. O segundo middleware é \"validateEmail\", que verifica se o email informado é válido. E o terceiro middleware é \"validatePassword\", que verifica se a senha informada é válida.\n\nCaso todos os middlewares sejam validados com sucesso, a rota chama o método \"login\" definido no \"usersController\", que é responsável por autenticar o usuário e gerar um token JWT. Se a autenticação for bem-sucedida, a rota retorna um objeto JSON contendo o token JWT no corpo da resposta e um status de sucesso (200 OK).\n\nCaso a autenticação falhe, a rota retorna um objeto JSON contendo uma mensagem de erro no corpo da resposta e um status de erro (401 Unauthorized).","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"Email\": \"julia2@teste.com\",\n\t\"Password\": \"juju\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_da3dc002e94540be8eaef64ea8af620a"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEzMiwiaWF0IjoxNjgyNDYwMTY1OTU0LCJleHAiOjE2ODI0NjA3NzA3NTR9.XhBJ1V9VIcnLyWuJrzzamZE81jtRycGcl31ywaw4RIakht_CdOPejG9WUR1qC0c5knV0JSfPC0JDD-6RLjc_VLboRLVOJoUCRZdGzqvyZYAyO2ulXrY_9qJjxka5bueQAMxMarkK4oKoGb9lfGBUgPcniw1QgxX9CirCo1tnyt2rZ-lQKBES08roUNMVBHRCQ8XY8Fcr-7Zo5v_brPqdfIz6JdoIP6LwAGfd1z_IcTe2WBnGchVrbpRZWtIUX27eYxUeK9z6WeXDxlI_dVZxwUNBXe5icfR-CMUt_x5lfvkmPMHtsPqfjtF8csEmlo2baA7QUZ1Jq-LCbeiwhmvk1PTRbqDz72pGzgRVKZ8kwh171qF8saLeVonN8QRCDtHdNNWl8qRQZl5L54E9N5l7NRkIgz6RSuyLaRhrxjaXLT5fAEXF6kK6WpTOs_dAuOmUkZ38ztb9jSxVhiQM5uMQN7v4JE03tKVNUIrcB5-j_l0N614golw_IpJ8jON9SD7smlDVOZ--ASW1q3WX7ckEfeTmB6KxlpLrP4YFEtb6fJr_VMjmDjZGyZ9cmNx7LW22V0ooL4xBfEvfJchfqNLxNqlM9-6HwLO3Y8uMg9DplOK9x33p_FHzLt6vl3XX5vL1Dm3Tt5VTuORiARfD_bk_3NdS0f5xe3shVta0zCMoKQo"},"metaSortKey":-1682460007414,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_cd09c66a5746a7f9e21c9bb9e59625885a1ba3c3","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682459992346,"created":1682459992346,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1682459992346,"_type":"environment"},{"_id":"jar_cd09c66a5746a7f9e21c9bb9e59625885a1ba3c3","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682470507396,"created":1682459992349,"name":"Default Jar","cookies":[{"key":"__cf_bm","value":"CouIOuoZQ66x.wvpWL4s3.kgQQB5I84Xf7T30jrFKgk-1682470505-0-ATycAF9x7eFv/SdQFbLH30F8D3khxGz0deRTNk0pJT+4wj9vNC7mjanTnlhdylleuR7Mr5aIXgS9m/zcGvsZsiU=","expires":"2023-04-26T01:25:05.000Z","domain":"onrender.com","path":"/","secure":true,"httpOnly":true,"extensions":["SameSite=None"],"hostOnly":false,"creation":"2023-04-26T00:30:45.386Z","lastAccessed":"2023-04-26T00:55:07.395Z","id":"7110909076113041"}],"_type":"cookie_jar"},{"_id":"spc_0539fed9b8c34d189be43a58ef3c9df8","parentId":"wrk_dff0238986014f3f841c07c45061d803","modified":1682459992339,"created":1682459992339,"fileName":"budget - users","contents":"","contentType":"yaml","_type":"api_spec"},{"_id":"env_8617854e4ce741d2af90f1ab879bc0fc","parentId":"env_cd09c66a5746a7f9e21c9bb9e59625885a1ba3c3","modified":1682461035730,"created":1682460502028,"name":"env budget","data":{"url":" http://budget-env.eba-ik396234.sa-east-1.elasticbeanstalk.com"},"dataPropertyOrder":{"&":["url"]},"color":null,"isPrivate":false,"metaSortKey":1682460502029,"_type":"environment"}]}
